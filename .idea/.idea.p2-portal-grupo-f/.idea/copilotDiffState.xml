<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/Assets/Materials/PortalShader.shader">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Assets/Materials/PortalShader.shader" />
              <option name="originalContent" value="Shader &quot;Tecnocampus/PortalShader&quot;&#10;{&#10;Properties&#10;{&#10;_MainTex (&quot;Texture&quot;, 2D) = &quot;white&quot; {}&#10;_MaskTex(&quot;Mask texture&quot;, 2D) = &quot;white&quot; {}&#10;_Cutout(&quot;Cutout&quot;, Range(0.0, 1.0)) = 0.5&#10;}&#10;SubShader&#10;{&#10;Tags{ &quot;Queue&quot; = &quot;Geometry &quot; &quot;IgnoreProjector&quot; = &quot;True&quot; &quot;RenderType&quot; = &quot;Opaque&quot; }&#10;Lighting Off&#10;Cull Back&#10;ZWrite On&#10;ZTest Less&#10;Fog{ Mode Off }&#10;Pass&#10;{&#10;CGPROGRAM&#10;#pragma vertex vert&#10;#pragma fragment frag&#10;#include &quot;UnityCG.cginc&quot;&#10;struct appdata&#10;{&#10;float4 vertex : POSITION;&#10;float2 uv : TEXCOORD0;&#10;};&#10;struct v2f&#10;{&#10;float4 vertex : SV_POSITION;&#10;float2 uv : TEXCOORD0;&#10;float4 screenPos : TEXCOORD1;&#10;};&#10;v2f vert (appdata v)&#10;{&#10;v2f o;&#10;o.vertex = UnityObjectToClipPos(v.vertex);&#10;o.uv = v.uv;&#10;o.screenPos = ComputeScreenPos(o.vertex);&#10;return o;&#10;}&#10;sampler2D _MainTex;&#10;sampler2D _MaskTex;&#10;float _Cutout;&#10;fixed4 frag (v2f i) : SV_Target&#10;{&#10;i.screenPos /= i.screenPos.w;&#10;fixed4 l_MaskColor= tex2D(_MaskTex, i.uv);&#10;if (l_MaskColor.a &lt; _Cutout)&#10;clip(-1);&#10;fixed4 col = tex2D(_MainTex, float2(i.screenPos.x, i.screenPos.y));&#10;return col;&#10;}&#10;ENDCG&#10;}&#10;}&#10;}" />
              <option name="updatedContent" value="Shader &quot;Tecnocampus/PortalShader&quot;&#10;{&#10;&#9;Properties&#10;&#9;{&#10;&#9;&#9;_MainTex (&quot;Texture&quot;, 2D) = &quot;white&quot; {}&#10;&#9;&#9;_MaskTex(&quot;Mask texture&quot;, 2D) = &quot;white&quot; {}&#10;&#9;&#9;_Cutout(&quot;Cutout&quot;, Range(0.0, 1.0)) = 0.5&#10;&#9;}&#10;&#9;SubShader&#10;&#9;{&#10;&#9;&#9;Tags{ &quot;Queue&quot; = &quot;Geometry &quot; &quot;IgnoreProjector&quot; = &quot;True&quot; &quot;RenderType&quot; = &quot;Opaque&quot; }&#10;&#9;&#9;Lighting Off&#10;&#9;&#9;Cull Back&#10;&#9;&#9;ZWrite On&#10;&#9;&#9;ZTest Less&#10;&#9;&#9;Fog{ Mode Off }&#10;&#9;&#9;&#10;&#9;&#9;Pass&#10;&#9;&#9;{&#10;&#9;&#9;&#9;CGPROGRAM&#10;&#9;&#9;&#9;#pragma vertex vert&#10;&#9;&#9;&#9;#pragma fragment frag&#10;&#9;&#9;&#9;#include &quot;UnityCG.cginc&quot;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;struct appdata&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;float4 vertex : POSITION;&#10;&#9;&#9;&#9;&#9;float2 uv : TEXCOORD0;&#10;&#9;&#9;&#9;};&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;struct v2f&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;float4 vertex : SV_POSITION;&#10;&#9;&#9;&#9;&#9;float2 uv : TEXCOORD0;&#10;&#9;&#9;&#9;&#9;float4 screenPos : TEXCOORD1;&#10;&#9;&#9;&#9;};&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;v2f vert (appdata v)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;v2f o;&#10;&#9;&#9;&#9;&#9;o.vertex = UnityObjectToClipPos(v.vertex);&#10;&#9;&#9;&#9;&#9;o.uv = v.uv;&#10;&#9;&#9;&#9;&#9;o.screenPos = ComputeScreenPos(o.vertex);&#10;&#9;&#9;&#9;&#9;return o;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;sampler2D _MainTex;&#10;&#9;&#9;&#9;sampler2D _MaskTex;&#10;&#9;&#9;&#9;float _Cutout;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;fixed4 frag (v2f i) : SV_Target&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;i.screenPos /= i.screenPos.w;&#10;&#9;&#9;&#9;&#9;fixed4 l_MaskColor= tex2D(_MaskTex, i.uv);&#10;&#9;&#9;&#9;&#9;if (l_MaskColor.a &lt; _Cutout)&#10;&#9;&#9;&#9;&#9;&#9;clip(-1);&#10;&#9;&#9;&#9;&#9;fixed4 col = tex2D(_MainTex, float2(i.screenPos.x, i.screenPos.y));&#10;&#9;&#9;&#9;&#9;return col;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;ENDCG&#10;&#9;&#9;}&#10;&#9;}&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>